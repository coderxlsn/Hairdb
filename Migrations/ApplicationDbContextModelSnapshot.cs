// <auto-generated />
using System;
using Hairdb.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hairdb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hairdb.DAL.Entity.UtCalander", b =>
                {
                    b.Property<string>("EventId")
                        .HasColumnName("event_id")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("AddbyUserId")
                        .HasColumnName("addby_user_id")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .HasColumnName("client_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDtime")
                        .HasColumnName("created_dtime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDtime")
                        .HasColumnName("end_dtime")
                        .HasColumnType("datetime");

                    b.Property<string>("EventDescription")
                        .HasColumnName("event_description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EventName")
                        .HasColumnName("event_name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("IsLocked")
                        .HasColumnName("isLocked")
                        .HasColumnType("int");

                    b.Property<int?>("IsSms")
                        .HasColumnName("isSms")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDtime")
                        .HasColumnName("start_dtime")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("int");

                    b.HasKey("EventId")
                        .HasName("PK__ut_Calan__2370F72790F2D6D6");

                    b.ToTable("ut_Calander");
                });

            modelBuilder.Entity("Hairdb.DAL.Entity.UtClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UtClient");
                });

            modelBuilder.Entity("Hairdb.DAL.Entity.UtColors", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ColorHex")
                        .HasColumnName("color_hex")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ut_Colors");
                });

            modelBuilder.Entity("Hairdb.DAL.Entity.UtService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UtService");
                });

            modelBuilder.Entity("Hairdb.DAL.Entity.UtUsers", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorId")
                        .HasColumnName("color_id")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CompanyName")
                        .HasColumnName("company_name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FullName")
                        .HasColumnName("full_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserGroupId")
                        .HasColumnName("user_group_id")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Userpws")
                        .HasColumnName("userpws")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Username", "Id")
                        .HasName("PK__ut_Users__90FA8BB3C0276880");

                    b.HasAlternateKey("Id");

                    b.ToTable("ut_Users");
                });
#pragma warning restore 612, 618
        }
    }
}
